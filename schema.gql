# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Users {
  id: Float!
  email: String!
  wallet: String!
  lowercaseEmail: String!
  timestamp: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginResult {
  user: Users!
  token: String!
}

type Artist {
  id: Float!
  name: String!
  description: String!
  user: Users!
  albums: [Album!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Album {
  id: Float!
  name: String!
  cover: String!
  artist: Artist!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Music {
  id: Float!
  name: String!
  content: String!
  hash: String!
  album: Album!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Meta {
  limit: Float!
  page: Float!
  totalPages: String!
  totalItems: Float!
}

type ListMusicResult {
  meta: Meta!
  data: [Music!]!
}

type Query {
  getMusics(pagination: Pagination): ListMusicResult!
  getMusic(id: String!): Music!
  login(user: LoginUserInput!): LoginResult!
  refreshToken: String!
}

input Pagination {
  page: Float = 1
  limit: Float = 10
  search: String = ""
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  create(createMusicInput: CreateMusicInput!): Music!
  createUser(createUserInput: CreateUserInput!): LoginResult!
}

input CreateMusicInput {
  name: String!
  content: String!
  hash: String!
  albumId: String!
}

input CreateUserInput {
  email: String!
  password: String!
  wallet: String!
}